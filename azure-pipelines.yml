# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - '*'

pool:
  vmImage: 'windows-2022'

variables:
  solution: '**/*.sln'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.defaultworkingdirectory)\AppxPackages\'

steps:

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: CmdLine@2
  displayName: Install chocolatey
  inputs:
    script: |
      @"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"

# Download secure file
# Download a secure file to the agent machine
- task: DownloadSecureFile@1
  name: downloadGoogleConstants
  inputs:
    secureFile: GoogleConstants.cs

# Download secure file
# Download a secure file to the agent machine
- task: DownloadSecureFile@1
  name: downloadHINConstants
  inputs:
    secureFile: HINClientCredentials.cs

- task: CmdLine@2
  displayName: Install dependencies
  inputs:
    script: |
      copy $(Build.SourcesDirectory)\AmiKoWindows\Source\GoogleConstants.cs.sample $(Build.SourcesDirectory)\AmiKoWindows\Source\GoogleConstants.cs
      copy /y $(downloadGoogleConstants.secureFilePath) $(Build.SourcesDirectory)\AmiKoWindows\Source\GoogleConstants.cs
      copy $(Build.SourcesDirectory)\AmiKoWindows\Source\HINClient\HINClientCredentials.cs.sample $(Build.SourcesDirectory)\AmiKoWindows\Source\HINClient\HINClientCredentials.cs
      copy /y $(downloadHINConstants.secureFilePath) $(Build.SourcesDirectory)\AmiKoWindows\Source\HINClient\HINClientCredentials.cs
      choco install windows-sdk-10.0 wixtoolset

- task: PowerShell@2
  displayName: Download databases
  inputs:
    filePath: '.\download.ps1'
    errorActionPreference: 'continue'

- task: VSBuild@1
  displayName: MSBuild
  inputs:
    platform: 'x86'
    solution: '$(solution)'
    msbuildArgs: '/p:Platform=x86 /p:Configuration=$(buildConfiguration) /p:AppxBundlePlatforms="x86" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

- task: VSBuild@1
  displayName: MSBuild
  inputs:
    platform: 'x64'
    solution: '$(solution)'
    msbuildArgs: '/p:Platform=x64 /p:Configuration=$(buildConfiguration) /p:AppxBundlePlatforms="x64" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

- task: VSBuild@1
  displayName: MSBuild
  inputs:
    platform: 'ARM64'
    solution: '$(solution)'
    msbuildArgs: '/p:Platform=ARM64 /p:Configuration=$(buildConfiguration) /p:AppxBundlePlatforms="ARM64" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

- task: CmdLine@2
  displayName: Make MSIX
  inputs:
    script: |
      "C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64\MakeAppx.exe" pack /d .\AmikoWindows\bin\Release\ARM64\AmiKo\net6.0-windows10.0.20348.0\ /p AmikoWindows\bin\AmikoDesitin-ARM64.msix
      "C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64\MakeAppx.exe" pack /d .\AmikoWindows\bin\Release\X64\AmiKo\net6.0-windows10.0.20348.0\ /p AmikoWindows\bin\AmikoDesitin-X64.msix
      "C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64\MakeAppx.exe" pack /d .\AmikoWindows\bin\Release\X86\AmiKo\net6.0-windows10.0.20348.0\ /p AmikoWindows\bin\AmikoDesitin-X86.msix
      
      "C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64\MakeAppx.exe" pack /d .\AmikoWindows\bin\Release\ARM64\CoMed\net6.0-windows10.0.20348.0\ /p AmikoWindows\bin\ComedDesitin-ARM64.msix
      "C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64\MakeAppx.exe" pack /d .\AmikoWindows\bin\Release\X64\CoMed\net6.0-windows10.0.20348.0\ /p AmikoWindows\bin\ComedDesitin-X64.msix
      "C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64\MakeAppx.exe" pack /d .\AmikoWindows\bin\Release\X86\CoMed\net6.0-windows10.0.20348.0\ /p AmikoWindows\bin\ComedDesitin-X86.msix

- task: PowerShell@2
  displayName: Make MSI
  inputs:
    filePath: '.\MakeMsi.ps1'
    errorActionPreference: 'continue'

# - task: CopyFiles@2
#   displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
#   inputs:
#     SourceFolder: '$(system.defaultworkingdirectory)'
#     Contents: 'AmikoWindows\bin\**'
#     TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Build Result'
  inputs:
    PathtoPublish: 'AmikoWindows\bin\Release'
    artifactName: 'Executables'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: msix'
  inputs:
    PathtoPublish: 'AmikoWindows\bin\AmikoDesitin-ARM64.msix'
    artifactName: 'AmikoDesitin-ARM64.msix'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: msix'
  inputs:
    PathtoPublish: 'AmikoWindows\bin\AmikoDesitin-X64.msix'
    artifactName: 'AmikoDesitin-X64.msix'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: msix'
  inputs:
    PathtoPublish: 'AmikoWindows\bin\AmikoDesitin-X86.msix'
    artifactName: 'AmikoDesitin-ARM86.msix'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: msix'
  inputs:
    PathtoPublish: 'AmikoWindows\bin\ComedDesitin-ARM64.msix'
    artifactName: 'ComedDesitin-ARM64.msix'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: msix'
  inputs:
    PathtoPublish: 'AmikoWindows\bin\ComedDesitin-X64.msix'
    artifactName: 'ComedDesitin-X64.msix'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: msix'
  inputs:
    PathtoPublish: 'AmikoWindows\bin\ComedDesitin-X86.msix'
    artifactName: 'ComedDesitin-ARM86.msix'

- task: GithubRelease@1 
  displayName: 'Create GitHub Release'
  inputs:
    gitHubConnection: github.com_zdavatz
    repositoryName: zdavatz/amiko_csharp
    tagSource: userSpecifiedTag
    tag: $(Build.BuildNumber)
    assets: |
      AmikoWindows\bin\AmikoDesitin-ARM64.msix
      AmikoWindows\bin\AmikoDesitin-X64.msix
      AmikoWindows\bin\AmikoDesitin-X86.msix
      AmikoWindows\bin\ComedDesitin-ARM64.msix
      AmikoWindows\bin\ComedDesitin-X64.msix
      AmikoWindows\bin\ComedDesitin-X86.msix
      AmiKoWindows\bin\Release\ARM64\Amiko-Installer\Amiko-Installer-ARM64.msi
      AmiKoWindows\bin\Release\X64\Amiko-Installer\Amiko-Installer-X64.msi
      AmiKoWindows\bin\Release\X86\Amiko-Installer\Amiko-Installer-X86.msi
      AmiKoWindows\bin\Release\ARM64\Comed-Installer\Comed-Installer-ARM64.msi
      AmiKoWindows\bin\Release\X64\Comed-Installer\Comed-Installer-X64.msi
      AmiKoWindows\bin\Release\X86\Comed-Installer\Comed-Installer-X86.msi

# see Issue https://github.com/microsoft/azure-pipelines-tasks/issues/10642
#- task: CopyFilesOverSSH@0
#  inputs:
#    sshEndpoint: 'pillbox'
#    sourceFolder: '$(build.artifactstagingdirectory)'
#    contents: 'AmiKoWindows/bin/Release/Amiko-Installer/Amiko-Installer.msi'
#    targetFolder: '/home/ftp/Amiko_Desitin_Win7.msi'

