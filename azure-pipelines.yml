# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86|x64|ARM'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.defaultworkingdirectory)\AppxPackages\\'

steps:
- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: CmdLine@2
  displayName: Install chocolatey
  inputs:
    script: |
      @"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"

# Download secure file
# Download a secure file to the agent machine
- task: DownloadSecureFile@1
  name: downloadGoogleConstants
  inputs:
    secureFile: GoogleConstants.cs

- task: CmdLine@2
  displayName: Install dependencies
  inputs:
    script: |
      copy $(Build.SourcesDirectory)\AmiKoWindows\Source\GoogleConstants.sample.cs $(Build.SourcesDirectory)\AmiKoWindows\Source\GoogleConstants.cs
      copy /y $(downloadGoogleConstants.secureFilePath) $(Build.SourcesDirectory)\AmiKoWindows\Source\GoogleConstants.cs
      choco install windows-sdk-8.1 windows-sdk-10.0 wixtoolset

- task: PowerShell@2
  displayName: Download databases
  inputs:
    filePath: '.\download.ps1'
    errorActionPreference: 'continue'

- task: VSBuild@1
  displayName: MSBuild
  inputs:
    platform: 'x86'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="x86|x64|ARM" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

- task: CmdLine@2
  displayName: Make Appx
  inputs:
    script: |
      "C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64\MakeAppx.exe" pack /d .\AmikoWindows\bin\Release\AmiKo /p AmikoWindows\bin\Release\AmikoDesitin.appx
      "C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64\MakeAppx.exe" pack /d .\AmikoWindows\bin\Release\CoMed /p AmikoWindows\bin\Release\CoMedDesitin.appx

- task: PowerShell@2
  displayName: Make MSI
  inputs:
    filePath: '.\MakeMsi.ps1'
    errorActionPreference: 'continue'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Build Result'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'

# see Issue https://github.com/microsoft/azure-pipelines-tasks/issues/10642
#- task: CopyFilesOverSSH@0
#  inputs:
#    sshEndpoint: 'pillbox'
#    sourceFolder: '$(build.artifactstagingdirectory)'
#    contents: 'AmiKoWindows/bin/Release/Amiko-Installer/Amiko-Installer.msi'
#    targetFolder: '/home/ftp/Amiko_Desitin_Win7.msi'

