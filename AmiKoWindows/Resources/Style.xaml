<ResourceDictionary
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:toolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:Actions="clr-namespace:MahApps.Metro.Actions;assembly=MahApps.Metro">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- See also Colors.cs -->
    <SolidColorBrush x:Key="PaleGray" Color="{DynamicResource Gray10}" />
    <SolidColorBrush x:Key="ModestBlack" Color="#888888" />

    <Style x:Key="MainWindowBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray5}" />
    </Style>
    <Style x:Key="MainWindowGridSplitter" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="Gray" />
    </Style>

    <Style x:Key="FlyoutToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Image x:Name="toggleButtonImage" Source="./img/desitin_icon.png" Height="20"></Image>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="toggleButtonImage" Property="Source" Value="./img/menu_button.png" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="toggleButtonImage" Property="Source" Value="./img/desitin_icon.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoHighlightedButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!-- <Setter Property="Foreground" Value="Black" /> -->
        <!-- <Setter Property="Background" Value="White" /> -->
        <Setter Property="Controls:ButtonHelper.PreserveTextCase" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="2"
                        Padding="11,1,11,1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- <Setter Property="Background" Value="LightGray" /> -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoBorderedButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!-- <Setter Property="Foreground" Value="Black" /> -->
        <!-- <Setter Property="Background" Value="White" /> -->
        <Setter Property="Controls:ButtonHelper.PreserveTextCase" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
<!--         <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="White" /> -->
        <Setter Property="Controls:ButtonHelper.PreserveTextCase" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" Background="{StaticResource PaleGray}" Padding="4,6,4,6" CornerRadius="2" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- <Setter TargetName="Border" Property="Background" Value="LightGray" /> -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WhiteIconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" Background="White" Padding="4,6,4,6" CornerRadius="2" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- <Setter TargetName="Border" Property="Background" Value="{StaticResource PaleGray}" /> -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SnackBarButton" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" Background="Transparent" Padding="4,6,4,6" CornerRadius="2" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- <Setter TargetName="Border" Property="Background" Value="Black" /> -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrintIconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
        <Setter Property="Margin" Value="0,7,6,7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" Background="White" Padding="10,3,10,3" CornerRadius="2" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- <Setter TargetName="Border" Property="Background" Value="{StaticResource PaleGray}" /> -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Mode}" Value="Html">
                <Setter Property="Visibility" Value="Collapsed" />
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Mode}" Value="Form">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="4,2,4,2" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Height="24"
                        SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StateSelectButton" TargetType="{x:Type ToggleButton}" >
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <!--
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Background" Value="LightGray" />
            </Trigger>
            -->
        </Style.Triggers>
    </Style>

    <Style x:Key="QuerySelectButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MetroButton}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!-- <Setter Property="Foreground" Value="Black" /> -->
        <!-- <Setter Property="Background" Value="White" /> -->
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="6,5,6,0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Controls:ButtonHelper.PreserveTextCase" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        CornerRadius="1"
                        Padding="2 0 3 0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" >
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- <Setter Property="Background" Value="LightGray" /> -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <!-- <Setter Property="Background" Value="LightGray" /> -->
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <!-- <Setter Property="Background" Value="Gray" /> -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="QuerySelectButtonText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontWeight" Value="Regular" />
    </Style>

    <Style x:Key="SearchTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="Height" Value="38" />
        <!-- <Setter Property="Background" Value="Lavender" /> -->
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="DarkGray" />
        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />
        <Setter Property="Controls:TextBoxHelper.UseFloatingWatermark" Value="True" />
        <Style.Triggers>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                <!-- <Setter Property="Foreground" Value="#FF4F7B8F" /> -->
                <Setter Property="Controls:TextBoxHelper.ButtonContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ContentControl
                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                Style="{DynamicResource PathIconContentControlStyle}"
                                Padding="3"
                                Content="M42.5,22A12.5,12.5 0 0,1 55,34.5A12.5,12.5 0 0,1 42.5,47C40.14,47 37.92,46.34 36,45.24L26.97,54.27C25.8,55.44 23.9,55.44 22.73,54.27C21.56,53.1 21.56,51.2 22.73,50.03L31.8,40.96C30.66,39.08 30,36.86 30,34.5A12.5,12.5 0 0,1 42.5,22M42.5,26A8.5,8.5 0 0,0 34,34.5A8.5,8.5 0 0,0 42.5,43A8.5,8.5 0 0,0 51,34.5A8.5,8.5 0 0,0 42.5,26Z" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SearchListBox" TargetType="{x:Type ListBox}" BasedOn="{StaticResource MetroListBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ScrollViewer x:Name="ScrollViewer">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontWeight" Value="Bold" />
        <!-- <Setter Property="Foreground" Value="Black" /> -->
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Margin" Value="0,2,0,2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" SnapsToDevicePixels="True" Margin="0" Background="{DynamicResource MahApps.Brushes.Control.Background}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#44666699" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MahApps.Brushes.AccentSelectedColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchListBoxChild" TargetType="{x:Type ListBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchListBoxChildItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentSelectedColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SearchListBoxChildItemText" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="-4,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height" Value="16" />
    </Style>

    <Style x:Key="ListCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Image x:Name="checkBoxImage" Source="./img/28-star-gy.png"></Image>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkBoxImage" Property="Source" Value="./img/28-star-ye.png" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="checkBoxImage" Property="Source" Value="./img/28-star-gy.png" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkBoxImage" Property="Source" Value="./img/28-star-ye.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SectionTitleListBox" TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
    </Style>

    <Style x:Key="FileNameListBox" TargetType="{x:Type ListBox}" BasedOn="{StaticResource MetroListBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0,6,0,16" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
    </Style>

    <Style x:Key="FileNameListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <!-- <Setter Property="Foreground" Value="Black" /> -->
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <StackPanel Name="Panel">
                      <ContentPresenter />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- <Setter TargetName="Panel" Property="Background" Value="AliceBlue" /> -->
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="BorderThickness" Value="0" />
                <!-- <Setter Property="Background" Value="White" /> -->
                <Setter Property="Width" Value="3" />
                <Setter Property="Height" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RequiredMark" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="1,0,0,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="Red" />
    </Style>

    <Style x:Key="ContactListBox" TargetType="{x:Type ListBox}" BasedOn="{StaticResource MetroListBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
    </Style>

    <Style x:Key="ContactListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <!-- <Setter Property="Foreground" Value="Black" /> -->
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <StackPanel Name="Panel">
                      <ContentPresenter />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- <Setter TargetName="Panel" Property="Background" Value="AliceBlue" /> -->
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContactLabel" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="ContactTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Width" Value="90" />
        <Setter Property="Height" Value="21" />
        <Setter Property="Margin" Value="0,2,0,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="ContactTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="27" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderBrush" Value="DarkGray" />
    </Style>

    <Style x:Key="MedicationListBox" TargetType="{x:Type ListBox}" BasedOn="{StaticResource MetroListBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
    </Style>

    <Style x:Key="MedicationListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Foreground}" /> 
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MedicationCommentTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="Height" Value="29" />
        <Setter Property="Margin" Value="0,0,2,3" />
        <Setter Property="Padding" Value="0,0,2,0" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="LightGray" />
        <Setter Property="Controls:TextBoxHelper.UseFloatingWatermark" Value="False" />
        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />
        <Style.Triggers>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                <Setter Property="Padding" Value="2,0,2,0" />
            </Trigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="LightGray" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Extended.Wpf.Toolkit -->
    <Style TargetType="{x:Type toolkit:MessageBox}">
         <!-- <Setter Property="Background" Value="White" /> -->
         <Setter Property="BorderBrush" Value="White" />
         <!-- <Setter Property="CaptionForeground" Value="Black" /> -->
         <!-- <Setter Property="WindowBorderBrush" Value="Gray" /> -->
         <!-- <Setter Property="WindowBackground" Value="White" /> -->
         <Setter Property="WindowOpacity" Value="1" />
         <!-- <Setter Property="Foreground" Value="Gray" /> -->
         <Setter Property="YesButtonStyle" Value="{StaticResource NoHighlightedButton}" />
         <Setter Property="NoButtonStyle" Value="{StaticResource NoHighlightedButton}" />
         <Setter Property="OkButtonStyle" Value="{StaticResource NoHighlightedButton}" />
         <Setter Property="CancelButtonStyle" Value="{StaticResource NoHighlightedButton}" />
    </Style>

    <!-- Print -->
    <Style x:Key="PrintText" TargetType="{x:Type TextBlock}">
         <Setter Property="FontSize" Value="14" />
         <Setter Property="FontWeight" Value="Normal" />
         <Setter Property="Margin" Value="0" />
         <Setter Property="Padding" Value="0,1,0,1" />
         <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="PrintMedicationListBox" TargetType="{x:Type ListBox}" BasedOn="{StaticResource MetroListBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="PrintMedicationListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="BorderThickness" Value="0" />
        <!-- <Setter Property="Foreground" Value="Black" /> -->
        <Setter Property="Margin" Value="2,6,0,6" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
